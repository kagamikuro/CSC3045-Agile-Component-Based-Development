package uk.ac.qub.agile.entry;

import java.util.ArrayList;
import java.util.List;

public class TaskExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public TaskExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("title is null");
            return (Criteria) this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("title is not null");
            return (Criteria) this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("title =", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("title <>", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("title >", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("title >=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("title <", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("title <=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("title like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("title not like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleIn(List<String> values) {
            addCriterion("title in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotIn(List<String> values) {
            addCriterion("title not in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("title between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("title not between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andInprogressIsNull() {
            addCriterion("inProgress is null");
            return (Criteria) this;
        }

        public Criteria andInprogressIsNotNull() {
            addCriterion("inProgress is not null");
            return (Criteria) this;
        }

        public Criteria andInprogressEqualTo(Boolean value) {
            addCriterion("inProgress =", value, "inprogress");
            return (Criteria) this;
        }

        public Criteria andInprogressNotEqualTo(Boolean value) {
            addCriterion("inProgress <>", value, "inprogress");
            return (Criteria) this;
        }

        public Criteria andInprogressGreaterThan(Boolean value) {
            addCriterion("inProgress >", value, "inprogress");
            return (Criteria) this;
        }

        public Criteria andInprogressGreaterThanOrEqualTo(Boolean value) {
            addCriterion("inProgress >=", value, "inprogress");
            return (Criteria) this;
        }

        public Criteria andInprogressLessThan(Boolean value) {
            addCriterion("inProgress <", value, "inprogress");
            return (Criteria) this;
        }

        public Criteria andInprogressLessThanOrEqualTo(Boolean value) {
            addCriterion("inProgress <=", value, "inprogress");
            return (Criteria) this;
        }

        public Criteria andInprogressIn(List<Boolean> values) {
            addCriterion("inProgress in", values, "inprogress");
            return (Criteria) this;
        }

        public Criteria andInprogressNotIn(List<Boolean> values) {
            addCriterion("inProgress not in", values, "inprogress");
            return (Criteria) this;
        }

        public Criteria andInprogressBetween(Boolean value1, Boolean value2) {
            addCriterion("inProgress between", value1, value2, "inprogress");
            return (Criteria) this;
        }

        public Criteria andInprogressNotBetween(Boolean value1, Boolean value2) {
            addCriterion("inProgress not between", value1, value2, "inprogress");
            return (Criteria) this;
        }

        public Criteria andBlockedIsNull() {
            addCriterion("blocked is null");
            return (Criteria) this;
        }

        public Criteria andBlockedIsNotNull() {
            addCriterion("blocked is not null");
            return (Criteria) this;
        }

        public Criteria andBlockedEqualTo(Boolean value) {
            addCriterion("blocked =", value, "blocked");
            return (Criteria) this;
        }

        public Criteria andBlockedNotEqualTo(Boolean value) {
            addCriterion("blocked <>", value, "blocked");
            return (Criteria) this;
        }

        public Criteria andBlockedGreaterThan(Boolean value) {
            addCriterion("blocked >", value, "blocked");
            return (Criteria) this;
        }

        public Criteria andBlockedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("blocked >=", value, "blocked");
            return (Criteria) this;
        }

        public Criteria andBlockedLessThan(Boolean value) {
            addCriterion("blocked <", value, "blocked");
            return (Criteria) this;
        }

        public Criteria andBlockedLessThanOrEqualTo(Boolean value) {
            addCriterion("blocked <=", value, "blocked");
            return (Criteria) this;
        }

        public Criteria andBlockedIn(List<Boolean> values) {
            addCriterion("blocked in", values, "blocked");
            return (Criteria) this;
        }

        public Criteria andBlockedNotIn(List<Boolean> values) {
            addCriterion("blocked not in", values, "blocked");
            return (Criteria) this;
        }

        public Criteria andBlockedBetween(Boolean value1, Boolean value2) {
            addCriterion("blocked between", value1, value2, "blocked");
            return (Criteria) this;
        }

        public Criteria andBlockedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("blocked not between", value1, value2, "blocked");
            return (Criteria) this;
        }

        public Criteria andTasktypeIsNull() {
            addCriterion("taskType is null");
            return (Criteria) this;
        }

        public Criteria andTasktypeIsNotNull() {
            addCriterion("taskType is not null");
            return (Criteria) this;
        }

        public Criteria andTasktypeEqualTo(String value) {
            addCriterion("taskType =", value, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeNotEqualTo(String value) {
            addCriterion("taskType <>", value, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeGreaterThan(String value) {
            addCriterion("taskType >", value, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeGreaterThanOrEqualTo(String value) {
            addCriterion("taskType >=", value, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeLessThan(String value) {
            addCriterion("taskType <", value, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeLessThanOrEqualTo(String value) {
            addCriterion("taskType <=", value, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeLike(String value) {
            addCriterion("taskType like", value, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeNotLike(String value) {
            addCriterion("taskType not like", value, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeIn(List<String> values) {
            addCriterion("taskType in", values, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeNotIn(List<String> values) {
            addCriterion("taskType not in", values, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeBetween(String value1, String value2) {
            addCriterion("taskType between", value1, value2, "tasktype");
            return (Criteria) this;
        }

        public Criteria andTasktypeNotBetween(String value1, String value2) {
            addCriterion("taskType not between", value1, value2, "tasktype");
            return (Criteria) this;
        }

        public Criteria andDurationIsNull() {
            addCriterion("duration is null");
            return (Criteria) this;
        }

        public Criteria andDurationIsNotNull() {
            addCriterion("duration is not null");
            return (Criteria) this;
        }

        public Criteria andDurationEqualTo(Integer value) {
            addCriterion("duration =", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotEqualTo(Integer value) {
            addCriterion("duration <>", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThan(Integer value) {
            addCriterion("duration >", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThanOrEqualTo(Integer value) {
            addCriterion("duration >=", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationLessThan(Integer value) {
            addCriterion("duration <", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationLessThanOrEqualTo(Integer value) {
            addCriterion("duration <=", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationIn(List<Integer> values) {
            addCriterion("duration in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotIn(List<Integer> values) {
            addCriterion("duration not in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationBetween(Integer value1, Integer value2) {
            addCriterion("duration between", value1, value2, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotBetween(Integer value1, Integer value2) {
            addCriterion("duration not between", value1, value2, "duration");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsIsNull() {
            addCriterion("taskDetails is null");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsIsNotNull() {
            addCriterion("taskDetails is not null");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsEqualTo(String value) {
            addCriterion("taskDetails =", value, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsNotEqualTo(String value) {
            addCriterion("taskDetails <>", value, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsGreaterThan(String value) {
            addCriterion("taskDetails >", value, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsGreaterThanOrEqualTo(String value) {
            addCriterion("taskDetails >=", value, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsLessThan(String value) {
            addCriterion("taskDetails <", value, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsLessThanOrEqualTo(String value) {
            addCriterion("taskDetails <=", value, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsLike(String value) {
            addCriterion("taskDetails like", value, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsNotLike(String value) {
            addCriterion("taskDetails not like", value, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsIn(List<String> values) {
            addCriterion("taskDetails in", values, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsNotIn(List<String> values) {
            addCriterion("taskDetails not in", values, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsBetween(String value1, String value2) {
            addCriterion("taskDetails between", value1, value2, "taskdetails");
            return (Criteria) this;
        }

        public Criteria andTaskdetailsNotBetween(String value1, String value2) {
            addCriterion("taskDetails not between", value1, value2, "taskdetails");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task
     *
     * @mbg.generated do_not_delete_during_merge Sun Nov 15 21:28:18 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task
     *
     * @mbg.generated Sun Nov 15 21:28:18 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}